name: Testing and release

on:
  push:
    branches:
      - main 
      - development
    tags:
      # The regex: /^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
      - 'v[0-9].[0-9]+.[0-9]+*'
  pull_request:
    branches: 
      - main 
      - development

jobs:
  build_linux:
    name: Build-Test Linux
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Build and test
        run: |
          mkdir -p build && cd build;
          cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_CASCTESTS=ON ..
          cmake --build . --config Release -j 4
          ctest -C Release -V -j 4

  build_macos:
    name: Build-Test macOS
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          
      - name: Build and test
        run: |
          mkdir -p build && cd build;
          cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_CASCTESTS=ON ..
          cmake --build . --config Release -j 4
          ctest -C Release -V -j 4


  build_windows:
    name: Build-Test Windows
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Build and test
        run: |
          mkdir -p build && cd build;
          cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_CASCTESTS=ON ..
          cmake --build . --config Release -j 4
          ctest -C Release -V -j 4


  deploy_documentation:
    name: Deploy documentation to Github pages
    runs-on: ubuntu-latest
    # needs: [build_windows, build_linux, build_macos]
    if: github.ref == 'refs/heads/main'
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    
    - name: Resolve dependencies
      run: sudo apt install doxygen

    - name: Get Project Version
      id: version
      run: |
        casc_version=$(git describe --tags --always --dirty)
        echo $casc_version
        echo ::set-output name=version::$casc_version

    - name: Build docs
      run: |
        mkdir -p build && cd build;
        cmake -DCMAKE_BUILD_TYPE=RELEASE ..
        cmake --build . --target docs --config Release -j 4

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # destination_dir: /
        publish_dir: ./build/html
